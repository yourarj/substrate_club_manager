
//! Autogenerated weights for `pallet_club_manager`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-09-14, STEPS: `20`, REPEAT: 10, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `LAPTOP-SDS4DFJA`, CPU: `AMD Ryzen 9 5900HX with Radeon Graphics`
//! EXECUTION: None, WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/node-template
// benchmark
// pallet
// --chain
// dev
// --pallet
// pallet_club_manager
// --extrinsic
// *
// --steps
// 20
// --repeat
// 10
// --output
// pallets/club-manager/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

pub trait WeightInfo {
	fn member_on_board(b: u32,) -> Weight;
	fn member_off_board(a: u32,) -> Weight;
}
/// Weight functions for `pallet_club_manager`.
pub struct SubstrateWeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeightInfo<T> {
	// Storage: ClubManagerModule Clubs (r:1 w:0)
	// Storage: ClubManagerModule Membership (r:1 w:1)
	/// The range of component `a` is `[0, 100]`.
	/// The range of component `b` is `[0, 2]`.
	fn member_on_board(b: u32, ) -> Weight {
		(16_994_000 as Weight)
			// Standard Error: 107_000
			.saturating_add((207_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: ClubManagerModule Clubs (r:1 w:0)
	// Storage: ClubManagerModule Membership (r:1 w:1)
	/// The range of component `a` is `[0, 100]`.
	/// The range of component `b` is `[0, 2]`.
	fn member_off_board(a: u32,) -> Weight {
		(18_001_000 as Weight)
			// Standard Error: 3_000
			.saturating_add((2_000 as Weight).saturating_mul(a as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
}

impl WeightInfo for () {
	// Storage: ClubManagerModule Clubs (r:1 w:0)
	// Storage: ClubManagerModule Membership (r:1 w:1)
	/// The range of component `a` is `[0, 100]`.
	/// The range of component `b` is `[0, 2]`.
	fn member_on_board(b: u32, ) -> Weight {
		(16_994_000 as Weight)
			// Standard Error: 107_000
			.saturating_add((207_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(RocksDbWeight::get().reads(2 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	// Storage: ClubManagerModule Clubs (r:1 w:0)
	// Storage: ClubManagerModule Membership (r:1 w:1)
	/// The range of component `a` is `[0, 100]`.
	/// The range of component `b` is `[0, 2]`.
	fn member_off_board(a: u32, ) -> Weight {
		(18_001_000 as Weight)
			// Standard Error: 3_000
			.saturating_add((2_000 as Weight).saturating_mul(a as Weight))
			.saturating_add(RocksDbWeight::get().reads(2 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
}